
RED LED

#include <msp430.h>
#define RED_LED BIT0 //P1.0
#define BUTTON1 BIT1 //push button P4.1
void main(void)
{
WDTCTL = WDTPW  | WDTHOLD;
P1OUT &= ~BIT0;
P1DIR |= BIT0;

P4DIR &= ~BIT1; //CLEAR P4.1(s1)
P4REN |= BIT1; //ENABLE PULL UP/DOWN RESISTOR
P4OUT |= BIT1; //MAKE RESISTOR A PULL UP

PM5CTL0 &= ~LOCKLPM5;

int count = 0;
while(1) {
         if((P4IN & BUTTON1) == 0x00) {
         _delay_cycles(5000);
         if((P4IN & BUTTON1) == 0x00) {
             P1OUT ^= RED_LED;
             } while((P4IN & BUTTON1) == 0x00) ;
         }
}
}



GREEN LED

#include <msp430.h>
#define GREEN_LED BIT6 //P6.6
#define BUTTON2 BIT3 //push button P2.3
void main(void)
{
WDTCTL = WDTPW  | WDTHOLD;
P6OUT &= ~BIT6;
P6DIR |= BIT6;

P2DIR &= ~BIT3; //CLEAR P4.1(s1)
P2REN |= BIT3; //ENABLE PULL UP/DOWN RESISTOR
P2OUT |= BIT3; //MAKE RESISTOR A PULL UP

PM5CTL0 &= ~LOCKLPM5;

int count = 0;
while(1) {
         if((P2IN & BUTTON2) == 0x00) {
         _delay_cycles(5000);
         if((P2IN & BUTTON2) == 0x00) {
             P6OUT ^= GREEN_LED;
             } while((P2IN & BUTTON2) == 0x00) ;
         }
}
}
